name: CI/CD Pipeline - ECS Fargate

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # required for OIDC federation
  contents: read    # to checkout the repo

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: aws-devops-app
  ECR_REPO: aws-devops-app-repo
  ECS_CLUSTER: aws-devops-app-cluster
  ECS_SERVICE: aws-devops-app-service
  CONTAINER_NAME: app
  PORT: 3000

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::714577032316:role/GitHubActions-ECS-Role-1
          aws-region: ${{ env.AWS_REGION }}


      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image to ECR
        run: |
          IMAGE_TAG=latest
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPO }}:$IMAGE_TAG
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t $IMAGE_URI ./app
          docker push $IMAGE_URI

      - name: Update ECS Task Definition
        id: task-def
        run: |
          TASK_DEF=$(aws ecs describe-task-definition \
            --task-definition ${{ env.PROJECT_NAME }}-task \
            --query taskDefinition)
          
          NEW_TASK_DEF=$(echo $TASK_DEF | \
            jq --arg IMAGE_URI "$IMAGE_URI" \
            --arg NAME "${{ env.CONTAINER_NAME }}" \
            '.containerDefinitions[0].image=$IMAGE_URI | 
             .family="${{ env.PROJECT_NAME }}-task"')

          echo "$NEW_TASK_DEF" > new-task-def.json

          TASK_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          echo "TASK_REVISION=$TASK_REVISION" >> $GITHUB_ENV

      - name: Deploy to ECS Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --task-definition $TASK_REVISION \
            --force-new-deployment
